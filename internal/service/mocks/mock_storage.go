// Code generated by MockGen. DO NOT EDIT.
// Source: shortener.go
//
// Generated by this command:
//
//	mockgen -source=shortener.go -destination=mocks/mock_storage.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockShortenerService is a mock of ShortenerService interface.
type MockShortenerService struct {
	ctrl     *gomock.Controller
	recorder *MockShortenerServiceMockRecorder
	isgomock struct{}
}

// MockShortenerServiceMockRecorder is the mock recorder for MockShortenerService.
type MockShortenerServiceMockRecorder struct {
	mock *MockShortenerService
}

// NewMockShortenerService creates a new mock instance.
func NewMockShortenerService(ctrl *gomock.Controller) *MockShortenerService {
	mock := &MockShortenerService{ctrl: ctrl}
	mock.recorder = &MockShortenerServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockShortenerService) EXPECT() *MockShortenerServiceMockRecorder {
	return m.recorder
}

// GiveInfoAboutLink mocks base method.
func (m *MockShortenerService) GiveInfoAboutLink(ctx context.Context) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GiveInfoAboutLink", ctx)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GiveInfoAboutLink indicates an expected call of GiveInfoAboutLink.
func (mr *MockShortenerServiceMockRecorder) GiveInfoAboutLink(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GiveInfoAboutLink", reflect.TypeOf((*MockShortenerService)(nil).GiveInfoAboutLink), ctx)
}

// LongLink mocks base method.
func (m *MockShortenerService) LongLink(ctx context.Context, data string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LongLink", ctx, data)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LongLink indicates an expected call of LongLink.
func (mr *MockShortenerServiceMockRecorder) LongLink(ctx, data any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LongLink", reflect.TypeOf((*MockShortenerService)(nil).LongLink), ctx, data)
}

// ShortLink mocks base method.
func (m *MockShortenerService) ShortLink(ctx context.Context, data string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ShortLink", ctx, data)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ShortLink indicates an expected call of ShortLink.
func (mr *MockShortenerServiceMockRecorder) ShortLink(ctx, data any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShortLink", reflect.TypeOf((*MockShortenerService)(nil).ShortLink), ctx, data)
}
